.data
    input_buffer: .space 256 # Asumiendo que ya tienes esto definido

.text
convert_to_binary:
    # $a0 contiene la dirección del buffer de entrada
    # La salida se almacenará en $v0

    # Verifica si es hexadecimal (empieza con "0x")
    lb $t0, ($a0)
    li $t1, '0'
    beq $t0, $t1, check_x # Si el primer caracter es cero, revisa si es hexadecimal.

    # Es decimal
    jal convert_decimal
    jr $ra

check_x:
    lb $t1, 1($a0)
    li $t2, 'x'
    bne $t1, $t2, convert_decimal # Si no es 'x', es decimal

    # Es hexadecimal
    la $a0, 2($a0) # Salta "0x"
    jal convert_hexadecimal
    jr $ra

convert_decimal:
    li $v0, 0 # Inicializa el resultado
    li $t0, 10 # Base decimal
loop_decimal:
    lb $t1, ($a0)
    beq $t1, 0, end_decimal # Fin de la cadena
    li $t2, '0'
    blt $t1, $t2, end_decimal # Si no es un dígito, termina
    li $t3, '9'
    bgt $t1, $t3, end_decimal # Si no es un dígito, termina
    sub $t1, $t1, $t2 # Convierte ASCII a valor numérico
    mult $v0, $t0
    mflo $v0 # $v0 = $v0 * 10
    add $v0, $v0, $t1 # $v0 = $v0 + dígito
    addi $a0, $a0, 1 # Siguiente caracter
    j loop_decimal
end_decimal:
    jr $ra

convert_hexadecimal:
    li $v0, 0 # Inicializa el resultado
loop_hex:
    lb $t1, ($a0)
    beq $t1, 0, end_hex # Fin de la cadena
    li $t2, '0'
    blt $t1, $t2, check_alpha # Si es menor que '0', verifica si es A-F
    li $t3, '9'
    ble $t1, $t3, convert_digit # Si es <= '9', es un dígito
check_alpha:
    li $t2, 'a'
    blt $t1, $t2, check_upper # Si es menor que 'a', verifica si es A-F
    li $t3, 'f'
    ble $t1, $t3, convert_alpha # Si es <= 'f', es a-f
check_upper:
    li $t2, 'A'
    blt $t1, $t2, end_hex # Si es menor que 'A', termina
    li $t3, 'F'
    bgt $t1, $t3, end_hex # Si es mayor que 'F', termina
convert_alpha:
    addi $t1, $t1, -87 # Convierte a-f o A-F a 10-15
    j shift_and_add
convert_digit:
    sub $t1, $t1, 48 # Convierte '0'-'9' a 0-9
shift_and_add:
    sll $v0, $v0, 4 # $v0 = $v0 * 16
    add $v0, $v0, $t1 # $v0 = $v0 + dígito/letra
    addi $a0, $a0, 1 # Siguiente caracter
    j loop_hex
end_hex:
    jr $ra
